best: fitness=0.00051021576  y.u = 0x5f1f9ff7 - (y.u >> 1); 0.704742730f * y.f * (2.387279987f - x * y.f * y.f)
best: fitness=0.00051015615  y.u = 0x5f1fce71 - (y.u >> 1); 0.702750802f * y.f * (2.391789198f - x * y.f * y.f)
best: fitness=0.0005097389  y.u = 0x5f20007b - (y.u >> 1); 0.700560927f * y.f * (2.396770716f - x * y.f * y.f)
100000. max=0.0005093813 rms=7.699727e-8 y.u = 0x5f2031b5 - (y.u >> 1); 0.698473454f * y.f * (2.401543140f - x * y.f * y.f)
160000. max=0.0005092621 rms=7.702382e-8 y.u = 0x5f2031e1 - (y.u >> 1); 0.698473573f * y.f * (2.401543140f - x * y.f * y.f)


MAX:
max=0.0006396129 @ x=3.8359375  rms=1.9713714e-7 y.u=0x5f5e555c-(y.u>>1); 0.255280614*y.f*(4.698304653-x*y.f*y.f) (kept 100)
max=0.0006452409 @ x=1.1054688  rms=1.869727e-7  y.u=0x5f1f8ed9-(y.u>>1); 0.708613157*y.f*(2.378748655-x*y.f*y.f) (kept 100)

RMS:
max=0.0010442238 @ x=2.8398438  rms=1.2390524e-7 y.u=0x5f1abf31-(y.u>>1); 0.759093463*y.f*(2.271862507-x*y.f*y.f) (kept 100)
12000,0.0010483637,2.8339844,1.2393217e-7,5f1ac003,0.759093463,2.271862507,100,650





30. max=0.0006471508 rms=1.9025724e-7 y.u = 0x5f1ffce1 - (y.u >> 1); 0.703952491f * y.f * (2.389239550f - x * y.f * y.f)

 79000. max=0.0006486130 @ 3.8652344  rms=2.0706125e-7  y.u=0x5f601800-(y.u>>1); 0.248496041*y.f*(4.783465862-x*y.f*y.f)
 20900. max=0.0006471508 rms=1.9025842e-7 y.u = 0x5f1ffcee - (y.u >> 1); 0.703950703f * y.f * (2.389243603f - x * y.f * y.f)
   300. max=0.0006453109 rms=2.0471565e-7 y.u = 0x5f6012d3 - (y.u >> 1); 0.248515978f * y.f * (4.783199787f - x * y.f * y.f)
  5400. max=0.0006432746 rms=2.0259614e-7 y.u = 0x5f5f9f17 - (y.u >> 1); 0.250249714f * y.f * (4.761075497f - x * y.f * y.f)
  48000. max=0.0006431613 @ x=2.9921875  rms=2.0258217e-7  y.u=0x5f5f9f07-(y.u>>1); 0.250249714*y.f*(4.761075497-x*y.f*y.f) (kept 50)
    6000. max=0.0006430860 @ x=3.859375  rms=2.0258574e-7 y.u=0x5f5f9f0b-(y.u>>1); 0.250249714*y.f*(4.761075497-x*y.f*y.f) (kept 100)

  256000. max=0.0006454365 @ 1.9140625  rms=1.8053771e-7  y.u=0x5f1e0e88-(y.u>>1); 0.725516379*y.f*(2.341657400-x*y.f*y.f)
  18000. max=0.0007012392 @ x=1.4453125  rms=2.3566696e-7  y.u=0x5f1537f8-(y.u>>1); 0.838595569*y.f*(2.126192093-x*y.f*y.f) (kept 50)
  9921000. max=0.0006467212 @ x=3.0507813  rms=1.9821978e-7  y.u=0x5f21b30b-(y.u>>1); 0.685413182*y.f*(2.432130098-x*y.f*y.f) (kept 5)



TODO:

exhaustive search of c1 and c2 and solve for best c3?

return xmax and make sure python plots at xmax to actually see who is higher

if error is no worse, but we moved, keep it
